| mainArray returnVal tempPoker passArray counter isSame testCaseName|

mainArray := #( 
#( #(1 2 3 4 5) #(6 7 8 9 10) #(6 7 8 9 10) ) 
#( #(1 2 3 4 5) #(6 7 8 9 10) #(6 7 8 9 11) ) 
#( #(1 2 3 4 5) #(6 7 8 9 10) #(6 7 8 9 10) ) 
 ).

Transcript clear.
tempPoker := Poker new.
passArray := Array new: 10.

mainArray do: [ :testCase | 
	counter := 1.
	(testCase at: 1) do: [ :x | passArray at: counter put: x. counter:= counter +2 ].
	counter :=2.
	(testCase at: 2) do: [ :x | passArray at: counter put: x. counter:= counter +2 ].
	
	returnVal := tempPoker deal: passArray.
	
	"now check if equal"
	isSame := true.
	1 to: 5 do: [ :checkAt | ((returnVal at: checkAt) == ((testCase at:3) at: checkAt) ) ifFalse: [ isSame:=false ]. ].
	
	testCaseName := 'Test Case: ' , (passArray asString) , ' ->expected: ' , ((testCase at:3) asString) .
	
	isSame ifTrue: [ Transcript show: 'Passed ' , testCaseName ; cr. ] 
	ifFalse: [ Transcript show: 'FAILED!!! at: ' , testCaseName , ' GOT--> ' ,  (returnVal asString); cr. ].
	
	 ].
